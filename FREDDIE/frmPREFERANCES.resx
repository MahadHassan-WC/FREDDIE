<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        AAABAAEAMDAAAAEAIAC7AwAAFgAAAIlQTkcNChoKAAAADUlIRFIAAAAwAAAAMAgGAAAAVwL5hwAAAAFz
        UkdCAK7OHOkAAAAEZ0FNQQAAsY8L/GEFAAAACXBIWXMAAA7DAAAOwwHHb6hkAAADUElEQVRoQ+2ZIU8r
        QRDH971UVCAQFQhEBQkIREUFSSsQFXyASgQCgUAgEBUVTSoqKxBNU1FRgUAUVAUCEj4AJAgEghBIaAIJ
        Tdqkok3u7X87R7t3U7p3l5dLk/sl/3R3bm9vZ29ndi/9I4SwpJaWv/S7tEQOhE3kQNhEDoRN5EDYRA6A
        WCwmCoWCeHp6Eu12W+zs7NAVnb29PdFsNkWj0RDJZJKswcFZKJBKpZI1S7/ft6QTWptisUhXJ7y8vFgr
        KytaG59ijcbCIIbDIQ1ryv39/U+bbDZLVp3T01OtL59ijcaSy4KG48Z+C9fX12TR6XQ6rv68KnAMrK2t
        UcnN7u6uSCQS6pdja2uLSv75r1loc3NTbG9vqyDn6Ha7VPJPYAe+vr6oxLO+vk4lN+/v71TyT2AHbm9v
        xXg8pprO6+urGAwGVHNzdXVFpWCwwcFJLgWrWq1aj4+P1vn5uSWXh7LLvE5hqYPss7q6SjWdz89PlcHQ
        58nJiQpouZeouvO5C8QaWZXLZXr8BOR7GYhqkB8fH2SdcHd39zOYVqtF1in5fF5dR7tZ8AzncxeINbLC
        zDt5e3uzZCZSwixig8KAUbfvg4Nyh1bt4fTBwYGyOzc3IHfzn/sMxRpZOWfLplarse2dgiN2GW9uNBpR
        D1MwAbP3LJKnIH54eKCSzv7+vojH41SbT6/Xo5IQcgmx6fW3oOfw5EC9XqeSjgxG1+EM6RODlMcFkcvl
        hJx9ujIhk8lQSefy8pJK5rCvZp6wXDhSqZS6jqVxc3ND1ik4LyFA7cDm2nx/f2uxYyjWOFdyqahgncVe
        t3i4Mxs5wb1In5VKhSxTDg8PXc8zEGtcqOPjYzWYi4sLNesYFDKICdhD4KzdHk4fHR2xzzEQa/Sss7Mz
        NRhTkELhtIwd9Va5Pg3FGj1JBikNyxykUOdHj0+xRmNh9p6fn2lY3sASCjj7EGs0FrebegHnIK5fD2KN
        RkIgcp+TXvBxdNAU6DidTqeNduDfwFfZvC82EwI5EHTwNs5d2ivsqzGR/N79deNCplm0seF06mP3nRVr
        NBY2MWxoGAiEMj5MkCLtDINf1GG32+LYgCP2xsaGq08viv7kC5vIgbCJHAibyIGwiRwImyV3QIh/MttN
        KVgKhRUAAAAASUVORK5CYII=
</value>
  </data>
</root>