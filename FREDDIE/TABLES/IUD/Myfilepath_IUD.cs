///////IUD CLASS CREATED ON 09/26/2019 7:35:37 AM

public class Myfilepath_IUD : dbUTL
{
	private const System.String DEFAULT_OBJECT_NAME ="MYFILEPATH";
	private const System.String DEFAULT_DATABASE_NAME ="FREDDIE";
	public event EVENT_HANDLER INFORMATION_EVENT_VERBOSE_LOCAL;
	public event EVENT_HANDLER INFORMATION_EVENT_LOCAL;
	public event EVENT_HANDLER WARNING_EVENT_LOCAL;
	public event EVENT_HANDLER ERROR_EVENT_LOCAL;
	private void LOG_INFORMATION_EVENT_VERBOSE_LOCAL(string MSG)
	{
	if (INFORMATION_EVENT_VERBOSE_LOCAL != null)
	{
	INFORMATION_EVENT_VERBOSE_LOCAL(this, new EVENT_HANDLER_SUPER(MSG));
	}
	}
	private void LOG_INFORMATION_EVENT_LOCAL(string MSG)
	{
	if (INFORMATION_EVENT_LOCAL != null)
	{
	INFORMATION_EVENT_LOCAL(this, new EVENT_HANDLER_SUPER(MSG));
	}
	}
	private void LOG_WARNING_EVENT_LOCAL(string MSG)
	{
	if (WARNING_EVENT_LOCAL != null)
	{
	WARNING_EVENT_LOCAL(this, new EVENT_HANDLER_SUPER(MSG));
	}
	}
	private void LOG_ERROR_EVENT_LOCAL(string MSG)
	{
	if (ERROR_EVENT_LOCAL != null)
	{
	ERROR_EVENT_LOCAL(this, new EVENT_HANDLER_SUPER(MSG));
	}
	}

	public System.Boolean DELETE_ALL_ROWS()
	{
		try
		{
			cmd = new System.Data.SqlClient.SqlCommand("usp_DEL_ALL_MYFILEPATH");
			cmd.CommandType = System.Data.CommandType.StoredProcedure;
			LOG_INFORMATION_EVENT_VERBOSE_LOCAL(GET_SQLSERVER_COMMAND_VALUES(cmd));
			return RUN_SQL_COMMAND(DEFAULT_DATABASE_NAME, DEFAULT_OBJECT_NAME);
		}
		catch (System.Data.SqlClient.SqlException SqlException)
		{
			LOG_ERROR_EVENT_LOCAL(this.GetType().Name + "|" + System.Reflection.MethodBase.GetCurrentMethod().Name + "|" + SqlException.Message);
			return false;
		}
		finally
		{
			LOG_INFORMATION_EVENT_VERBOSE_LOCAL(this.GetType().Name + "|" + System.Reflection.MethodBase.GetCurrentMethod().Name + "|finally");
			cmd = null;
		}
	}

	public System.Boolean INSERT_A_ROW(MyfilepathModel o)
	{
		try
		{
			cmd = new System.Data.SqlClient.SqlCommand("usp_INS_MYFILEPATH");
			/////TABLE COLUMNS////
			cmd.Parameters.AddWithValue("@CS_PATH_MODEL",o.CS_PATH_MODEL);
			cmd.Parameters.AddWithValue("@CS_PATH_READ",o.CS_PATH_READ);
			cmd.Parameters.AddWithValue("@CS_PATH_IUD",o.CS_PATH_IUD);
			cmd.Parameters.AddWithValue("@CS_PATH_GUI",o.CS_PATH_GUI);
			cmd.Parameters.AddWithValue("@SQL_PATH",o.SQL_PATH);
			///// cmd.Parameters.AddWithValue("@INSOPID",o.INSOPID); RESERVED COLUMN NAME AUTO GENERATED BY SQL SERVER
			///// cmd.Parameters.AddWithValue("@INSDT",o.INSDT); RESERVED COLUMN NAME AUTO GENERATED BY SQL SERVER

			cmd.CommandType = System.Data.CommandType.StoredProcedure;
			LOG_INFORMATION_EVENT_VERBOSE_LOCAL(GET_SQLSERVER_COMMAND_VALUES(cmd));
			return RUN_SQL_COMMAND(DEFAULT_DATABASE_NAME, DEFAULT_OBJECT_NAME);
		}
		catch (System.Data.SqlClient.SqlException SqlException)
		{
			LOG_ERROR_EVENT_LOCAL(this.GetType().Name + "|" + System.Reflection.MethodBase.GetCurrentMethod().Name + "|" + SqlException.Message);
			return false;
		}
		finally
		{
			 LOG_INFORMATION_EVENT_VERBOSE_LOCAL(this.GetType().Name + "|" + System.Reflection.MethodBase.GetCurrentMethod().Name + "|finally");
			 cmd = null;
		}
	}

	public System.Boolean DELETE_A_ROW_BY_PK(MyfilepathModel o)
	{
		try
		{
			cmd = new System.Data.SqlClient.SqlCommand("usp_DEL_BY_PK_MYFILEPATH");
			/////PRIMARY KEY////
			///// cmd.Parameters.AddWithValue("@INSOPID",o.INSOPID); RESERVED COLUMN NAME AUTO GENERATED BY SQL SERVER

			cmd.CommandType = System.Data.CommandType.StoredProcedure;
			LOG_INFORMATION_EVENT_VERBOSE_LOCAL(GET_SQLSERVER_COMMAND_VALUES(cmd));
			return RUN_SQL_COMMAND(DEFAULT_DATABASE_NAME, DEFAULT_OBJECT_NAME );
		}
		catch (System.Data.SqlClient.SqlException SqlException)
		{
			LOG_ERROR_EVENT_LOCAL(this.GetType().Name + "|" + System.Reflection.MethodBase.GetCurrentMethod().Name + "|" + SqlException.Message);
			return false;
		}
		finally
		{
			 LOG_INFORMATION_EVENT_VERBOSE_LOCAL(this.GetType().Name + "|" + System.Reflection.MethodBase.GetCurrentMethod().Name + "|finally");
			 cmd = null;
		}
	}

	public System.Boolean UPDATE_A_ROW_BY_PK(MyfilepathModel o)
	{
		try
		{
			cmd = new System.Data.SqlClient.SqlCommand("usp_UPD_BY_PK_MYFILEPATH");
			/////TABLE COLUMNS////
			cmd.Parameters.AddWithValue("@CS_PATH_MODEL",o.CS_PATH_MODEL);
			cmd.Parameters.AddWithValue("@CS_PATH_READ",o.CS_PATH_READ);
			cmd.Parameters.AddWithValue("@CS_PATH_IUD",o.CS_PATH_IUD);
			cmd.Parameters.AddWithValue("@CS_PATH_GUI",o.CS_PATH_GUI);
			cmd.Parameters.AddWithValue("@SQL_PATH",o.SQL_PATH);
			///// cmd.Parameters.AddWithValue("@INSDT",o.INSDT); RESERVED COLUMN NAME AUTO GENERATED BY SQL SERVER

			/////PRIMARY KEY////
			///// cmd.Parameters.AddWithValue("@INSOPID",o.INSOPID); RESERVED COLUMN NAME AUTO GENERATED BY SQL SERVER

			cmd.CommandType = System.Data.CommandType.StoredProcedure;
			LOG_INFORMATION_EVENT_VERBOSE_LOCAL(GET_SQLSERVER_COMMAND_VALUES(cmd));
			return RUN_SQL_COMMAND(DEFAULT_DATABASE_NAME, DEFAULT_OBJECT_NAME);
		}
		catch (System.Data.SqlClient.SqlException SqlException)
		{
			LOG_ERROR_EVENT_LOCAL(this.GetType().Name + "|" + System.Reflection.MethodBase.GetCurrentMethod().Name + "|" + SqlException.Message);
			return false;
		}
		finally
		{
			 LOG_INFORMATION_EVENT_VERBOSE_LOCAL(this.GetType().Name + "|" + System.Reflection.MethodBase.GetCurrentMethod().Name + "|finally");
			 cmd = null;
		}
	}

	public System.Boolean INSERT_A_ROW_WHERE_NOT_EXISTS(MyfilepathModel o)
	{
		try
		{
		System.String SQL_INSERT_A_ROW_WHERE_NOT_EXISTS = @"IF NOT EXISTS (SELECT * FROM DBO.MYFILEPATH WHERE 
			CS_PATH_MODEL = @CS_PATH_MODEL)
			BEGIN 
				INSERT INTO DBO.MYFILEPATH(
				CS_PATH_MODEL,
				CS_PATH_READ,
				CS_PATH_IUD,
				CS_PATH_GUI,
				SQL_PATH,
				INSOPID,
				INSDT
				)
				VALUES(
				@CS_PATH_MODEL,
				@CS_PATH_READ,
				@CS_PATH_IUD,
				@CS_PATH_GUI,
				@SQL_PATH,
				USER_NAME(),
				GETDATE()
				)
				END
				";

			cmd = new System.Data.SqlClient.SqlCommand(SQL_INSERT_A_ROW_WHERE_NOT_EXISTS);
			/////TABLE COLUMNS////
			cmd.Parameters.AddWithValue("@CS_PATH_MODEL",o.CS_PATH_MODEL);
			cmd.Parameters.AddWithValue("@CS_PATH_READ",o.CS_PATH_READ);
			cmd.Parameters.AddWithValue("@CS_PATH_IUD",o.CS_PATH_IUD);
			cmd.Parameters.AddWithValue("@CS_PATH_GUI",o.CS_PATH_GUI);
			cmd.Parameters.AddWithValue("@SQL_PATH",o.SQL_PATH);
			///// cmd.Parameters.AddWithValue("@INSOPID",o.INSOPID); RESERVED COLUMN NAME AUTO GENERATED BY SQL SERVER
			///// cmd.Parameters.AddWithValue("@INSDT",o.INSDT); RESERVED COLUMN NAME AUTO GENERATED BY SQL SERVER

			/////PRIMARY KEY////
			///// cmd.Parameters.AddWithValue("@INSOPID",o.INSOPID); RESERVED COLUMN NAME AUTO GENERATED BY SQL SERVER

			return RUN_SQL_COMMAND(DEFAULT_DATABASE_NAME, DEFAULT_OBJECT_NAME);
		}///TRY
		catch (System.Data.SqlClient.SqlException SqlException)
		{
			LOG_ERROR_EVENT_LOCAL(this.GetType().Name + "|" + System.Reflection.MethodBase.GetCurrentMethod().Name + "|" + SqlException.Message);
			return false;
		}///CATCH
		finally
		{
			 LOG_INFORMATION_EVENT_VERBOSE_LOCAL(this.GetType().Name + "|" + System.Reflection.MethodBase.GetCurrentMethod().Name + "|finally");
			 cmd = null;
		}
	}
}   /////END OF IUD CLASS MyfilepathModel


