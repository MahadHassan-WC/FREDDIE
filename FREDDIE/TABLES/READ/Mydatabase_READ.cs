///////READ CLASS CREATED ON 09/25/2019 9:39:54 AM

public class Mydatabase_READ : dbUTL
{
	private const System.String DEFAULT_OBJECT_NAME ="MYDATABASE";
	private const System.String DEFAULT_DATABASE_NAME ="FREDDIE";
	public event EVENT_HANDLER INFORMATION_EVENT_VERBOSE_LOCAL;
	public event EVENT_HANDLER INFORMATION_EVENT_LOCAL;
	public event EVENT_HANDLER WARNING_EVENT_LOCAL;
	public event EVENT_HANDLER ERROR_EVENT_LOCAL;



    const string SQL_DATABASES_THIS_SERVER = @"
                select 
                        name, 
                        dbid 
                from 
                        sysdatabases 
                where 
                        name not in('master','model','msdb','tempdb') and 
                         name not in(SELECT DATABASE_NAME FROM MYDATABASE WHERE SERVER_ID = @SERVER_ID)
                order by 
                        name ";





    private void LOG_INFORMATION_EVENT_VERBOSE_LOCAL(string MSG)
	{
		if (INFORMATION_EVENT_VERBOSE_LOCAL != null)
		{
			INFORMATION_EVENT_VERBOSE_LOCAL(this, new EVENT_HANDLER_SUPER(MSG));
		}
	}
	private void LOG_INFORMATION_EVENT_LOCAL(string MSG)
	{
		if (INFORMATION_EVENT_LOCAL != null)
		{
			INFORMATION_EVENT_LOCAL(this, new EVENT_HANDLER_SUPER(MSG));
		}
	}
	private void LOG_WARNING_EVENT_LOCAL(string MSG)
	{
		if (WARNING_EVENT_LOCAL != null)
		{
			WARNING_EVENT_LOCAL(this, new EVENT_HANDLER_SUPER(MSG));
		}
	}
	private void LOG_ERROR_EVENT_LOCAL(string MSG)
	{
		if (ERROR_EVENT_LOCAL != null)
		{
			ERROR_EVENT_LOCAL(this, new EVENT_HANDLER_SUPER(MSG));
		}
	}

    public System.Data.DataSet SEL_BY_PK(MydatabaseModel o)
    {
        try
        {
            cmd = new System.Data.SqlClient.SqlCommand();
            cmd.CommandType = System.Data.CommandType.StoredProcedure;
            cmd.Parameters.AddWithValue("@SERVER_ID", o.SERVER_ID);
            cmd.Parameters.AddWithValue("@DATABASE_NAME", o.DATABASE_NAME);

            cmd.CommandText = "usp_SEL_BY_PK_MYDATABASE";
            return GET_SP_DATASET(DEFAULT_DATABASE_NAME, cmd);
        }
        catch (System.Data.SqlClient.SqlException SqlException)
        {
            LOG_ERROR_EVENT_LOCAL(this.GetType().Name + "|" + System.Reflection.MethodBase.GetCurrentMethod().Name + "|" + SqlException.Message);
            return null;
        }
        finally
        {
            cmd = null;
            LOG_INFORMATION_EVENT_VERBOSE_LOCAL(this.GetType().Name + "|" + System.Reflection.MethodBase.GetCurrentMethod().Name + "|finally");
        }
    }
    public System.Data.DataSet SEL_BY_INSOPID( )
    {
        try
        {
            cmd = new System.Data.SqlClient.SqlCommand();
            cmd.CommandType = System.Data.CommandType.StoredProcedure;
            cmd.CommandText = "usp_SEL_BY_INSOPID_MYDATABASE";


            /////COLUMNS TO SELECT BY////

            ///// cmd.Parameters.AddWithValue("@INSOPID",o.INSOPID); RESERVED COLUMN NAME AUTO GENERATED BY SQL SERVER
            return GET_SP_DATASET(DEFAULT_DATABASE_NAME, cmd);
        }
        catch (System.Data.SqlClient.SqlException SqlException)
        {
            LOG_ERROR_EVENT_LOCAL(this.GetType().Name + "|" + System.Reflection.MethodBase.GetCurrentMethod().Name + "|" + SqlException.Message);
            return null;
        }
        finally
        {
            cmd = null;
            LOG_INFORMATION_EVENT_VERBOSE_LOCAL(this.GetType().Name + "|" + System.Reflection.MethodBase.GetCurrentMethod().Name + "|finally");
        }
    } /// end of CUSTOM SELECT


    public System.Data.DataSet SEL_BY_SERVER_ID(MydatabaseModel o)
    {
        try
        {
            cmd = new System.Data.SqlClient.SqlCommand();
            cmd.CommandType = System.Data.CommandType.StoredProcedure;
            cmd.CommandText = "usp_SEL_MYDATABASE_BY_SERVER_ID";


            /////COLUMNS TO SELECT BY////

            cmd.Parameters.AddWithValue("@SERVER_ID", o.SERVER_ID);
            return GET_SP_DATASET(DEFAULT_DATABASE_NAME, cmd);
        }
        catch (System.Data.SqlClient.SqlException SqlException)
        {
            LOG_ERROR_EVENT_LOCAL(this.GetType().Name + "|" + System.Reflection.MethodBase.GetCurrentMethod().Name + "|" + SqlException.Message);
            return null;
        }
        finally
        {
            cmd = null;
            LOG_INFORMATION_EVENT_VERBOSE_LOCAL(this.GetType().Name + "|" + System.Reflection.MethodBase.GetCurrentMethod().Name + "|finally");
        }
    } /// end of CUSTOM SELECT



    public System.Data.DataSet SEL_ALL_ROWS()
	{
		try
		{
		cmd = new System.Data.SqlClient.SqlCommand();
		cmd.CommandType = System.Data.CommandType.StoredProcedure;
		cmd.CommandText = "usp_SEL_ALL_MYDATABASE";
			return GET_SP_DATASET(DEFAULT_DATABASE_NAME, cmd   );
		}
		catch (System.Data.SqlClient.SqlException SqlException)
		{
			LOG_ERROR_EVENT_LOCAL(this.GetType().Name + "|" + System.Reflection.MethodBase.GetCurrentMethod().Name + "|" + SqlException.Message);
			return null;
		}
		finally
		{
			cmd = null;
			 LOG_INFORMATION_EVENT_VERBOSE_LOCAL(this.GetType().Name + "|" + System.Reflection.MethodBase.GetCurrentMethod().Name + "|finally");
		}
	} /// end of SEL_ALL_ROWS
}   /////END OF CLASS


